# General
# -----------------------------------------------------------------------------
alias c='clear'

# copy/paste from clipboard
alias cc="echo @{0} | tr -d '\n' | xclip -selection c"
alias pc="echo @{0} | xclip -selection c -o"
# copy to clipboard from file
alias ccf="xclip -se c <"

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, excluding . and ..
alias la="ls -lAF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"

# Lists hidden files in long format.
alias lsh='ls -dlA .?*'

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Colorizes diff output, if possible.
if type 'colordiff' &> /dev/null; then
    alias diff='colordiff'
fi

# Finds directories.
alias fdd='find . -type d -name'

# Finds files.
alias fdf='find . -type f -name'

# Creates parent directories on demand.
alias mkdir='mkdir -pv'

# Enable aliases to be sudoâ€™ed
alias sudo='sudo '

# Searches history.
alias h='history_search' # see file `functions`
alias hs='history_session_search' # see file `functions`

# Sets editors and defaults.
alias edit='vim'
alias svi='sudo vi'
alias vi=vim
alias vis='vim "+set si"'

# Reloas the shell.
alias reload='exec $SHELL -l'


# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"


# Navigation
# -----------------------------------------------------------------------------
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias _="cd -"

# Shortcuts
alias d="cd ~/dev"
alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"
alias dc="cd ~/Documents"


# Time
# -----------------------------------------------------------------------------

# Gets local/UTC date and time in ISO-8601 format `YYYY-MM-DDThh:mm:ss`.
alias now='date +"%Y-%m-%dT%H:%M:%S"'
alias unow='date -u +"%Y-%m-%dT%H:%M:%S"'

# Gets date in `YYYY-MM-DD` format`
alias nowdate='date +"%Y-%m-%d"'
alias unowdate='date -u +"%Y-%m-%d"'

# Gets time in `hh:mm:ss` format`
alias nowtime='date +"%T"'
alias unowtime='date -u +"%T"'

# Gets Unix time stamp`
alias timestamp='date -u +%s'

# Gets week number in ISO-8601 format `YYYY-Www`.
alias week='date +"%Y-W%V"'

# Gets weekday number.
alias weekday='date +"%u"'


# Weather
# -----------------------------------------------------------------------------

alias wttr="curl wttr.in"

# Displays detailed weather and forecast.
if command -v curl > /dev/null; then
    alias forecast='curl --silent --compressed --max-time 10 --url "https://wttr.in?F"'
else
    alias forecast='wget -qO- --compression=auto --timeout=10 "https://wttr.in?F"'
fi

# Displays current weather.
if command -v curl > /dev/null; then
    alias weather='curl --silent --compressed --max-time 10 --url "https://wttr.in/?format=%l:+(%C)+%c++%t+\[%h,+%w\]"'
else
    alias weather='wget -qO- --compression=auto --timeout=10 "https://wttr.in/?format=%l:+(%C)+%c++%t+\[%h,+%w\]"'
fi


# Ubuntu
# -----------------------------------------------------------------------------

# install with apt-get
alias apt-i="sudo apt install "
alias aupt-up='sudo apt-get update && sudo apt-get upgrade'

# Locks the session.
alias lock='gnome-screensaver-command --lock'


# GIT
# -----------------------------------------------------------------------------

alias g='git'

# git-extras-big-blobs
# human readably list the blobs by size, excluding HEAD
alias gxbigblobs='git rev-list --objects --all |
  git cat-file --batch-check="%(objecttype) %(objectname) %(objectsize) %(rest)" |
  sed -n "s/^blob //p" |
  sort --numeric-sort --key=2 |
  cut -c 1-12,41- |
  $(command -v gnumfmt || echo numfmt) --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest |
  grep -vF --file=<(git ls-tree -r HEAD | awk "{print $3}")'

# git-branch-default
# gets the default git branch
alias gbdefault='git symbolic-ref refs/remotes/origin/HEAD | sed "s@^refs/remotes/origin/@@"'

# git-branch-clean
# removes all local branches which have been merged into the default branch
alias gbclean='git checkout -q $(gbdefault) && git for-each-ref refs/heads/ "--format=%(refname:short)" | grep -v -e main -e master -e develop | while read branch; do mergeBase=$(git merge-base $(gbdefault) $branch) && [[ $(git cherry $(gbdefault) $(git commit-tree $(git rev-parse "$branch^{tree}") -p $mergeBase -m _)) == "-"* ]] && git branch -D $branch; done && git fetch --prune --all'

# git-branch-dry-clean
# dry run for `gbclean` alias
alias gbdryclean='git checkout -q $(gbdefault) && git for-each-ref refs/heads/ "--format=%(refname:short)" | grep -v -e main -e master -e develop -e dev -e testing -e qa | while read branch; do mergeBase=$(git merge-base $(gbdefault) $branch) && [[ $(git cherry $(gbdefault) $(git commit-tree $(git rev-parse "$branch^{tree}") -p $mergeBase -m _)) == "-"* ]] && echo "$branch is merged into $(gbdefault) and can be deleted"; done'



# Networking
# -----------------------------------------------------------------------------

alias vpn="protonvpn-cli"

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

alias myip="curl http://ipecho.net/plain; echo"

# Stop after sending count ECHO_REQUEST packets #
alias ping='ping -c 5'

# resume by default
alias wget='wget -c'
# Pings hostname(s) 30 times in quick succession.
alias fastping='ping -c 30 -i.2'

# Flushes the DNS cache.
alias flushdns='sudo /etc/init.d/dns-clean restart && echo DNS cache flushed'

# Gets all IP addresses.
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# Gets local IP address.
alias localip="ip route get 1 | awk '{print \$NF;exit}'"

# Gets external IP address.
if command -v dig &> /dev/null; then
    alias publicip='dig +short myip.opendns.com @resolver1.opendns.com'
elif command -v curl > /dev/null; then
    alias publicip='curl --silent --compressed --max-time 5 --url "https://ipinfo.io/ip"'
else
    alias publicip='wget -qO- --compression=auto --timeout=5 "https://ipinfo.io/ip"'
fi

# Sends HTTP requests.
command -v lwp-request &> /dev/null && for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
    #shellcheck disable=SC2139
    alias $method="lwp-request -m '$method'"
done
unset method;



# Sysadmin
# -----------------------------------------------------------------------------

# searchable process list
alias psg="ps aux | grep -v grep | grep -i -e VSZ -e"

# Display drives and space in human readable format:
alias drives='df -h'

## pass options to free ##
alias meminfo='free -m -l -t'
 
## get top process eating memory
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'
 
## get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'
 
## Get server cpu info ##
alias cpuinfo='lscpu'
 
## get GPU ram on desktop / laptop##
alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'

## shortcut  for iptables and pass it via sudo#
alias ipt='sudo /sbin/iptables'
 
# display all rules #
alias iptlist='sudo /sbin/iptables -L -n -v --line-numbers'
alias iptlistin='sudo /sbin/iptables -L INPUT -n -v --line-numbers'
alias iptlistout='sudo /sbin/iptables -L OUTPUT -n -v --line-numbers'
alias iptlistfw='sudo /sbin/iptables -L FORWARD -n -v --line-numbers'
alias firewall=iptlist

# get web server headers #
alias header='curl -I'
 
# find out if remote server supports gzip / mod_deflate or not #
alias headerc='curl -I --compress'

# Lists drive mounts.
alias mnt="mount | awk -F' ' '{ printf \"%s\t%s\n\",\$1,\$3; }' | column -t | egrep ^/dev/ | sort"

# Prints each $PATH entry on a separate line.
alias path='echo -e ${PATH//:/\\n}'
