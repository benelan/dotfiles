# Easier navigation
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias _="cd -"

# Shortcuts
alias d="cd ~/dev"
alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"
alias dc="cd ~/Documents"

alias vpn="protonvpn-cli"
alias wttr="curl wttr.in"

# copy/paste from clipboard
alias cc="echo @{0} | xclip -selection c"
alias pc="echo @{0} | xclip -selection c -o"
# copy to clipboard from file
alias ccf="xclip -se c <"


# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, excluding . and ..
alias la="ls -lAF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Enable aliases to be sudoâ€™ed
alias sudo='sudo '

# Get week number
alias week='date +%V'

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# searchable process list
alias psg="ps aux | grep -v grep | grep -i -e VSZ -e"

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

alias myip="curl http://ipecho.net/plain; echo"

################ GIT ################

# git-extras-big-blobs
# human readably list the blobs by size, excluding HEAD
alias gxbigblobs="git rev-list --objects --all |
  git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' |
  sed -n 's/^blob //p' |
  sort --numeric-sort --key=2 |
  cut -c 1-12,41- |
  $(command -v gnumfmt || echo numfmt) --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest |
  
# git-branch-default
# gets the default git branch
alias gbdefault='git symbolic-ref refs/remotes/origin/HEAD | sed "s@^refs/remotes/origin/@@"'

# git-branch-clean
# removes all local branches which have been merged into the default branch
alias gbclean='git checkout -q $(gbdefault) && git for-each-ref refs/heads/ "--format=%(refname:short)" | grep -v -e main -e master -e develop | while read branch; do mergeBase=$(git merge-base $(gbdefault) $branch) && [[ $(git cherry $(gbdefault) $(git commit-tree $(git rev-parse "$branch^{tree}") -p $mergeBase -m _)) == "-"* ]] && git branch -D $branch; done'

# git-branch-dry-clean
# dry run for `gbclean` alias
alias gbdryclean=`git checkout -q $(gbdefault) && git for-each-ref refs/heads/ "--format=%(refname:short)" | grep -v -e main -e master -e develop -e dev -e testing -e qa | while read branch; do mergeBase=$(git merge-base $(gbdefault) $branch) && [[ $(git cherry $(gbdefault) $(git commit-tree $(git rev-parse "$branch^{tree}") -p $mergeBase -m _)) == "-"* ]] && echo "$branch is merged into master and can be deleted"; done'
  grep -vF --file=<(git ls-tree -r HEAD | awk '{print $3}')"
