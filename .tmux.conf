# -- General -------------------------------------------------------------------

# set $TERM and enable true color
set -ga terminal-overrides ',*:Tc'
set -g default-terminal 'screen-256color'
if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'
# underscore colors - needs tmux-3.0
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
# undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

set -g update-environment 'SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION DISPLAY OG_TERM TERM'

unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

set -g escape-time 0
set -g repeat-time 300
set -g history-limit 10000
set -s focus-events on
set -g mouse on
set -g mode-keys vi
set -g status-keys vi

bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

bind C-u run 'tmux-url-select'
bind C-y run 'tmux-yank'

bind C-e new-window -n 'tmux.conf' sh -c '${EDITOR:-vi} ~/.tmux.conf && \
  tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'

# -- Display -------------------------------------------------------------------

set -sg base-index 1          # start window numbering at 1
set -wg pane-base-index 1     # start pane numbering at 1
set -wg automatic-rename on   # rename windows to reflect current program
set -g allow-rename off       # don't allow programs to rename windows
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles on          # set terminal title
set -g display-panes-time 800 # pane indicators display time
set -g display-time 1000      # status messages display time
set -g status-interval 5      # redraw status line every 5 seconds
set -g aggressive-resize on   # Size windows correctly when switching sessions

# activity
set -g monitor-activity on
set -g monitor-bell on
set -g bell-action none
set -g activity-action none

# -- Navigation ----------------------------------------------------------------

%if #{>=:#{version},3.2}
  bind C-p popup -E 'git mux project'
  bind C-t popup -E 'git mux task'
%else
  bind C-p new-window -c '#{pane_current_path}' 'git mux project'
  bind C-t new-window -c '#{pane_current_path}' 'git mux task'
%endif

bind C-c run 'git mux project ~/dev/work/calcite-components'

# kill stuff
bind -r x kill-pane
bind -r q confirm-before kill-window
bind C-DC run 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# session navigation
bind S new-session
bind Tab switch-client -l  # move to last session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# window navigation
bind BSpace last-window

# pane navigation that doesn't wrap around the edge of the screen
bind -r h if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind -r j if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind -r k if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind -r l if-shell -F '#{pane_at_right}'  {} { select-pane -R }

# swap panes
bind -r > swap-pane -D
bind -r < swap-pane -U

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# pane splits
unbind '"'
unbind %
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# join and break panes
bind J choose-window 'join-pane -h -s "%%"'
bind B break-pane -d

# easily swap a pane (targeted by pane number) with the current pane
bind P display-panes\; command-prompt -p 'pane #: '  'swap-pane -t "%%"'

# -- Root Table Keymaps --------------------------------------------------------

# vim-style pane splits
bind -n C-M-v split-window -h -c "#{pane_current_path}"
bind -n C-M-s split-window -v -c "#{pane_current_path}"

# pane navigation
bind -n C-M-x kill-pane
bind -n C-M-o rotate-window
bind -n C-M-h if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind -n C-M-j if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind -n C-M-k if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind -n C-M-l if-shell -F '#{pane_at_right}'  {} { select-pane -R }

# pane resizing
bind -n C-M-Left resize-pane -L 5
bind -n C-M-Down resize-pane -D 5
bind -n C-M-Up resize-pane -U 5
bind -n C-M-Right resize-pane -R 5

# window navigation
bind -n C-M-c new-window
bind -n C-M-p previous-window
bind -n C-M-n next-window

%if #{>=:#{version},3.2}
  bind -n C-M-0 popup -E 'git mux project'
  bind -n C-M-1 popup -E 'git mux task'
%else
  bind -n C-M-0 new-window -c '#{pane_current_path}' 'git mux project'
  bind -n C-M-1 new-window -c '#{pane_current_path}' 'git mux task'
%endif

bind -n C-M-9 run 'git mux project ~/dev/work/calcite-components'

bind -n  C-M-[ copy-mode
bind -n  C-M-] choose-buffer
bind -n  C-M-w choose-tree

bind -n C-l send-keys C-l \; run 'sleep 0.2' \; refresh-client -cl

# -- Copy Mode -----------------------------------------------------------------

set -g set-clipboard off

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle

bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Y send -X copy-end-of-line

# save selection to clipboard from copy mode
bind -T copy-mode-vi C-y send -X copy-pipe-and-cancel 'cb >/dev/null 2>&1'

# save most recent buffer to clipboard
bind y run -b 'tmux save-buffer - | cb >/dev/null 2>&1'

# -- Statusline/Theme ----------------------------------------------------------

# disable tmux statusline when zoomed into a pane
set-hook -g after-resize-pane {
  if 'tmux list-panes -F "#F" | grep -q Z' {
    set -g status off
  } {
    set -g status on
  }
}

bind _ set status

set -g status-justify left
set -g status-position bottom
set -g status-left-length 40
set -g status-right-length 40

set -g status-left ' #S '
set -g status-right ' %Y-%m-%d %H:%M [#H] '
set -wg window-status-current-format '#[fg=colour15,bold] #I:#W.#P'
set -wg window-status-format '#[fg=colour8] #I:#W.#P#F'

set -ag status-style bg=colour0,fg=colour2
set -wg window-status-activity-style bg=default,fg=default
set -wg window-status-bell-style bg=default,fg=default
set -g message-style bg=colour8,fg=colour0
set -g message-command-style bg=colour8,fg=colour0
set -g mode-style bg=colour8,fg=colour0
set -g pane-active-border-style fg=colour8
set -g pane-border-style fg=colour8
