# This file controls the behaviour of line input editing for
# programs that use the GNU Readline library.  Existing
# programs include FTP, Bash, and GDB.
# https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html#Readline-Init-File-Syntax
#
# You can re-read the inputrc file with C-x C-r.
# Lines beginning with '#' are comments.
#
# First, include any system-wide bindings and variable
# assignments from /etc/Inputrc
$include /etc/inputrc

set keymap vi-command
"\ee": emacs-editing-mode
i: emacs-editing-mode

set keymap vi-insert
"\ee": emacs-editing-mode
"jk": vi-movement-mode

set keymap emacs
"\ee": vi-editing-mode
ESC: "\eejk"

set editing-mode emacs
set bell-style none
set keyseq-timeout 1200

set colored-completion-prefix on
set colored-stats on
set completion-ignore-case on
set completion-map-case on
set completion-query-items 420
set enable-bracketed-paste on
set expand-tilde on
set history-preserve-point on
set mark-symlinked-directories on
set match-hidden-files off
set menu-complete-display-prefix on
set page-completions off
set page-completions off
set print-completions-horizontally on
set show-all-if-ambiguous on
set show-all-if-unmodified on
set skip-completed-text on
set visible-stats on

TAB: menu-complete
"\e[Z": menu-complete-backward

# Use the string that has already been typed as the prefix for searching
"\e[B": history-search-forward
"\e[A": history-search-backward
"\C-p": history-search-backward
"\C-n": history-search-forward

# use Alt+Left/Right to move word by word in command
"\e[1;5C": forward-word
"\e[1;5D": backward-word

# Use Alt+Delete to delete the following word
"\e[3;3~": kill-word

$if Bash
	# Expand ! history with a spacebar press
	# Note that this makes your shell unusable if your Bash doesn't have
	# magic-space.  It's had this feature since 2.02.
	Space: magic-space

  # list out matching commands from history
  "\C-]": dabbrev-expand

  # Wrap a command in $( ... )
  "\C-xq": "\C-a\$(\C-e)"

  # Open vifm in the current directory
  "\e-": "vifm .\C-m"

  # Pipipe the last command to fzf and
  # pass the output to a new command
  "\C-xF": '$(!!|fzf --ansi --height 40)\C-a \C-m\C-m'

  # Wrap the current command in $( .... | fzf)
  "\C-xf": "\C-e | fzf --ansi --height 40)\C-a $(\C-a"
$endif
