#!/usr/bin/env bash

# If the tmux server isn't running, pick a session first
[[ -z $(pgrep tmux) ]] && muxsesh && exit 0

session_name="$(tmux display-message -p "#S")"
if [[ -d ~/dev/work/$session_name ]]; then
    session_dir=~/dev/work/$session_name
elif [[ -d ~/dev/personal/$session_name ]]; then
    session_dir=~/dev/personal/$session_name
else
    session_dir="$(pwd)"
fi

cd "$session_dir" || exit 0

if [[ -d "$session_dir/.git" ]] || [[ "$(git rev-parse --show-toplevel 2>/dev/null)" = "$session_dir" ]]; then
    if [[ $# -eq 1 ]]; then
        github_user=$(git config --global github.user)
        branch="-b ${github_user:$(id -un)}/$1"
    else
        branch="$(
            # remote and local branches sorted by commit date
            git for-each-ref refs/remotes refs/heads --sort='-committerdate' --format='%(refname:short)' |
                # search, remove 'origin/' prefix from branch names, remove empty line(s), dedupe, select
                awk '/'"$SEARCH_TERM"'/{gsub("^origin/(HEAD)?","");print}' | awk NF | uniq | fzf -1 -0 --cycle
        )"
    fi
    [[ -z "$branch" ]] && exit 0

    # shellcheck disable=2086
    task_name="$(basename $branch | tr "./" "__")"
    target="$session_name:$task_name"
    ! tmux has-session -t "$target" >/dev/null 2>&1 &&
        tmux new-window -dn "${task_name}"
    # assumes a bare repo will be using worktrees
    if [[ $(git config --get core.bare) = "true" ]]; then
        if [[ ! -d "$session_dir/$task_name" ]]; then
            git worktree add "$task_name" "$branch"
            if [[ -f "$session_dir/$task_name/package.json" ]]; then
                tmux send-keys -t "$target" "cd $session_dir/$task_name && npm install" Enter
            fi
        else
            tmux send-keys -t "$target" "cd $session_dir/$task_name" Enter
        fi
    else
        git checkout "$branch"
    fi
    [[ -z $TMUX ]] && tmux attach -t "$target"
fi

echo "$session_dir"
unset session_dir session_name task_name target branch new_worktree github_user
