local M = {}

local i = function(icon, backup) return vim.g.use_devicons and icon or backup or "" end

M.icons = {
  diagnostics = {
    [vim.diagnostic.severity.ERROR] = i("Û∞Öú ", "E"),
    [vim.diagnostic.severity.WARN] = i("Û∞Ä¶ ", "W"),
    [vim.diagnostic.severity.INFO] = i("Û∞ãº ", "I"),
    [vim.diagnostic.severity.HINT] = i("Û∞¨è ", "H"),
  },
  lsp_kind = {
    Array = i "Ó™ä ",
    Boolean = i "Ó™è ", -- ‚ó©
    Class = i "ÔÜ≥ ", -- Û∞†±
    Color = i "Ó≠ú ",
    Comment = i "ÔÉ• ",
    Component = i "ÔÑ° ",
    Conditional = i "Ôäú ",
    Constant = i "Û∞≠∏ ",
    Constructor = i "Ó™å ",
    Copilot = i "ÔÑì ",
    Enum = i "Ó™ï ",
    EnumMember = i "Ó≠û ",
    Error = i "Û∞õâ ",
    Event = i "Ó™Ü ",
    Field = i "Û∞ìΩ ",
    File = i "Ó©ª ",
    Folder = i "ÔÑï ",
    Fragment = i "ÔÑ° ",
    Function = i "Ó™å ", -- Û∞°±
    Interface = i "ÓÆ∫ ", -- ÔÉ®
    Key = i "Û∞∑ñ ", -- Û∞åã
    Keyword = i "Û∞∑ñ ",
    Method = i "Ó™å ",
    Module = i "Û∞∂Æ ",
    Namespace = i "Ó™ã ",
    Null = i "Û∞ü¢ ",
    Number = i "Û∞é† ",
    Object = i "Û∞Ö© ",
    Operator = i "Ó≠§ ",
    Package = i "Ó¨© ", -- "ÔÜ≤ ",
    Property = i "Û∞ìΩ ",
    Reference = i "ÔÇé ",
    Snippet = i "ÔÉÑ ",
    Spell = i "Û∞ìÜ ",
    String = i "Û±Äç ",
    Struct = i "Ó™ë ",
    Text = i "Û∞¶® ", -- Û∞àç
    TypeParameter = i "Ó™í ",
    Unit = i "Ó™ñ ",
    Value = i "Ôì∑ ",
    Variable = i "Ó™à ",
  },
  git = {
    added = i("Û∞êñ ", "+"),
    changed = i("Û∞è¨ ", "*"),
    removed = i("Û∞çµ ", "-"),
    branch = i "ÔÑ¶ ",
  },
  border = "rounded", -- i({ "ü≠Ω", "‚ñî", "ü≠æ", "‚ñï", "ü≠ø", "‚ñÅ", "ü≠º", "‚ñè" }, "rounded"),
  ui = { -- utf8 icons so no fallbacks required
    prompt = "‚ù± ",
    select = "‚û§  ",
    checkmark = "üó∏ ",
    box = "‚òê ",
    box_checked = "‚òë ",
    circle = "‚óè ",
    collapsed = "üûÇ",
    expanded = "üûÉ",
    eol = "‚§∂",
    nbsp = "‚ê£",
    extends = "¬ª",
    precedes = "¬´",
    ellipses = "‚Ä¶  ",
    dot = "¬∑",
    dot_outline = "‚ó¶",
    separator = "‚îä",
    fill_slash = "‚ï±",
    fill_shade = "‚ñë",
    fill_solid = "‚ñà",
    speech_bubble = "üó© ",
    lightening_bubble = "üó± ",
  },
  lazy = {
    plugin = "",
    cmd = "",
    config = "",
    event = "",
    ft = "",
    import = "",
    init = "",
    keys = "",
    lazy = "",
    runtime = "",
    source = "",
    start = "",
    task = "",
  },
}

M.filetypes = {
  excluded = {
    "DiffviewFileHistory",
    "DiffviewFiles",
    "NeogitCommitView",
    "NeogitLogView",
    "NeogitPopup",
    "NeogitReflogView",
    "NeogitStatus",
    "Outline",
    "TelescopePreview",
    "TelescopePrompt",
    "TelescopeResults",
    "Trouble",
    "chatgpt-input",
    "checkhealth",
    "cmp_menu",
    "dap-repl",
    "dap-terminal",
    "dapui_console",
    "dapui_hover",
    "floggraph",
    "fugitive",
    "fugitiveblame",
    "harpoon",
    "help",
    "lazy",
    "lspinfo",
    "man",
    "mason",
    "neotest-output",
    "neotest-output-panel",
    "neotest-summary",
    "netrw",
    "octo",
    "qf",
    "undotree",
  },
  writing = {
    "",
    "chatgpt-input",
    "gitcommit",
    "mail",
    "markdown",
    "octo",
    "rst",
    "text",
  },
  webdev = {
    "astro",
    "html",
    "javascript",
    "javascriptreact",
    "svelte",
    "typescript",
    "typescriptreact",
    "vue",
  },
  marker_folds = {
    "",
    "conf",
    "text",
    "sh",
    "tmux",
    "vim",
    "vifm",
  },
}

M.lsp_servers = {
  -- "astro",
  "bashls",
  "cssls",
  -- "docker_compose_language_service",
  "dockerls",
  -- "efm",
  -- "emmet_language_server",
  "eslint",
  -- "gopls",
  -- "graphql",
  "html",
  "jsonls",
  "lua_ls",
  "marksman",
  -- "mdx_analyzer",
  -- "pyright",
  -- "rust_analyzer",
  -- "sqlls",
  "svelte",
  -- "tailwindcss",
  "taplo",
  -- "tsserver",
  "vimls",
  "volar",
  "yamlls",
  "zk",
}

M.mason_packages = {
  "actionlint", -- github action linter
  "codespell", -- commonly misspelled English words linter
  -- "cspell", -- code spell checker
  -- "delve", -- golang debug adapter
  -- "eslint", -- web dev linter
  "fixjson", -- json formatter
  "hadolint", -- dockerfile linter
  "markdownlint", -- markdown linter and formatter
  "prettier", -- everything formatter
  "shellcheck", -- shell linter
  "shfmt", -- shell formatter
  "stylelint", -- css/scss linter
  "stylua", -- lua formatter
  -- "write-good", -- English grammar linter
}

M.treesitter_parsers = {
  "astro",
  "bash",
  "css",
  "diff",
  "dockerfile",
  "git_rebase",
  "gitcommit",
  "gitignore",
  "go",
  "gomod",
  "gosum",
  "gowork",
  "graphql",
  "html",
  "http",
  "ini",
  "javascript",
  "jq",
  "jsdoc",
  "json",
  "json5",
  "jsonc",
  "latex",
  "lua",
  "luadoc",
  "luap",
  "make",
  "markdown",
  "markdown_inline",
  "perl",
  "python",
  "query",
  "regex",
  "rst",
  "rust",
  "scss",
  "sql",
  "svelte",
  "toml",
  "tsx",
  "typescript",
  "vim",
  "vimdoc",
  "vue",
  "xml",
  "yaml",
}

M.path = {
  include = {
    ".",
    "",
    "src/**",
    "api/**",
    "lua/**",
    "utils/**",
    "scripts/**",
    "support/**",
    "server/**",
    "packages/**",
    "apps/**",
    "examples/**",
    "docs/**",
    "tests/**",
    ".github/**",
    "static",
    "config",
    "public",
  },
  ignore = {
    ".git/*",
    "node_modules/*",
    "dist/*",
    "build/*",
    "*.7z",
    "*.avi",
    "*.db",
    "*.docx",
    "*.filepart",
    "*.flac",
    "*.gif",
    "*.gifv",
    "*.gpg",
    "*.gz",
    "*.ico",
    "*.iso",
    "*.jpeg",
    "*.jpg",
    "*.m4a",
    "*.mkv",
    "*.mp3",
    "*.mp4",
    "*.min.*",
    "*.odt",
    "*.ogg",
    "*.pbm",
    "*.pdf",
    "*.png",
    "*.ppt",
    "*.psd",
    "*.pyc",
    "*.rar",
    "*.sqlite*",
    "*.swp",
    "*.tar",
    "*.tga",
    "*.ttf",
    "*.wav",
    "*.webm",
    "*.xbm",
    "*.xcf",
    "*.xls",
    "*.xlsx",
    "*.xpm",
    "*.xz",
    "*.zip",
  },
}

M.art = {
  bender_ascii = [[
              _
             ( )
              H
              H
             _H_
          .-'-.-'-.
         /         \
        |           |
        |   .-------'._
        |  / /  '.' '. \          .---------------.
        |  \ \ @   @ / /         |  Hey sexy mama, |
        |   '---------'          |  wanna kill all |
        |    _______|            |     humans?     |
        |  .'-+-+-+|             ,----------------'
        |  '.-+-+-+|          --'
        |    """""" |
        '-.__   __.-'
             """
  ]],

  bender_dots = [[
               ‚†ò‚°Ä‚†Ä  Hey‚†Äsexy mama,    ‚†Ä‚°ú
               ‚†Ä‚†ë‚°Ä‚†Ä  wanna kill all‚†Ä‚†Ä‚†Ä‚°î
               ‚†Ä‚†Ä‚†à‚†¢‚¢Ñ‚†Ä‚†Ä‚†Ähumans?‚†Ä ‚†Ä‚†Ä‚†Ä‚£Ä‚†¥‚†ä
               ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚°Ä‚†§‚†Ñ‚†í‚†à
               ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£Ä‚†Ñ‚†ä‚†Å
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚£µ
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚°Ä
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ä‚°á
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†ö‚†í‚†ä‚£≤‚†§‚£Ä
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†à‚†Ä‚†à‚†â‚†â‚†Ä‚†Ä‚†Ä‚†â‚¢Ü
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†é‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†á
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚°†‚†Ä‚†í‚†Ä‚†Ä‚†Ä‚†ê‚†í‚†í‚†à‚†ê‚††‚°Ä
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†ê‚†Ä‚†Ä‚°î‚†à‚†ô‚†õ‚†ª‚¢ø‚†ø‚†õ‚†â‚†ª‚£∑‚°ï‚°Ñ
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚¢†‚†Ä‚†Ä‚°Ä‚†∞‚†Ü‚†Ä‚†Ä‚¢à‚†∞‚†∂‚†Ä‚¢†‚£ø‚°ø‚°á
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°Ä‚†Ä‚†Ä‚†ë‚††‚†¨‚†Ö‚†ê‚†í‚†í‚†ì‚†≤‚¢∂‚†∂‚†Ø‚†â‚†Ç‚†Å
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚£Ä‚£Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚°Ä‚†Ä‚£Ä‚†∏
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚£å‚†Å‚†ì‚†í‚¢∫‚†í‚†í‚°ó‚†í‚°á
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°á‚†Ä‚†à‚†´‚†Ω‚†Ä‚¢∏‚†Ç‚†Ä‚†á‚†©‚†ì‚°Ñ
   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°†‚†Ç‚†Å‚†à‚†ê‚†Ç‚†§‚†Ñ‚†Ä‚†Ä‚†Ä‚†§‚†§‚†Ñ‚†í‚†â‚†ê‚¢Ñ‚°Ä
   ‚†Ä‚†Ä‚†Ä‚†Ä‚°î‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ò‚£Ñ
   ‚†Ä‚†Ä‚¢Ä‚†§‚†Ø‚†≠‚£í‚†Ç‚†§‚†Ñ‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†§‚†ê‚†ä‚†Å‚¢∏‚¢¢‚†Ä
   ‚†Ä‚¢∞‚£Å‚†§‚¢§‚°Ä‚†Ä‚¢£‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°Ä‚†Ä‚°Ñ‚†à‚°ß‚°Ä
   ‚°†‚†ã‚†Ä‚†Ä‚¢Ä‚†á‚†Ä‚¢∏‚†Ä‚¢∞‚†ã‚†Ä‚†í‚†í‚†í‚†í‚†í‚†í‚†Ç‚†â‚†â‚†Ä‚†Ä‚¢∏‚†Ä‚°á‚¢∞‚°ø‚†õ‚†Ü
  ]],
}

return M
