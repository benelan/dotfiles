version: "1"
git_protocol: ssh
aliases:
  w: fzf workflow
  v: fzf release
  R: fzf repo
  g: fzf gist
  s: fzf search
  code: fzf search code

  r: |
    !FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS
      --bind='alt-e:execute(gh run view --log-failed {-1})'
    " gh fzf run $*

  # m: |
  #   !FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS
  #     --bind='alt-bspace:execute(
  #       gh api --silent --method DELETE /repos/{owner}/{repo}/milestones/{-1}
  #     )+reload(eval \"\$FZF_DEFAULT_COMMAND\")'
  #   " gh fzf milestone

  i: |
    !FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS
      --bind='alt-+:execute(gh issue edit --add-assignee @me {1})+refresh-preview'
      --bind='alt--:execute(gh issue edit --remove-assignee @me {1})+refresh-preview'
      --bind='alt-N:execute<nvim +\"Octo issue edit \$(echo {1} | cut -c 2-)\">+refresh-preview'
      --bind='alt-D:execute(gh issue edit {1} --add-label \"2 - in development\" --remove-label \"1 - assigned\")+refresh-preview'
      --bind='alt-I:execute(gh issue edit {1} --add-label \"3 - installed\")+refresh-preview'
      --bind='alt-@:execute(
        selected=\"\$(gh fzf milestone)\"
        [ -n \"\$selected\" ] && gh issue edit --milestone \"\$selected\" {1}
      )'
      --bind='alt-.:reload(
        current=\$(
          gh api --paginate --jq \"map(select(.due_on != null)) | .[].number\" \
            \"/repos/{owner}/{repo}/milestones?sort=due_on&state=open&direction=asc\" |
          head -n1
        )
        eval \"\$FZF_DEFAULT_COMMAND \${current:+--milestone \$current}\"
      )'
    " gh fzf issue $*

  p: |
    !FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS
      --bind='alt-N:execute<nvim +\"Octo pr edit \$(echo {1} | cut -c 2-)\">+refresh-preview'
      --bind='alt-m:execute(gh pr merge --delete-branch --squash {1})+refresh-preview'
      --bind='alt-v:execute(gh pr edit {1} --add-label \"pr ready for visual snapshots\" --remove-label \"pr ready for visual snapshots\")+refresh-preview'
      --bind='alt-V:execute(gh pr edit --add-label \"skip visual snapshots\" {1})+refresh-preview'
      --bind='alt-+:execute(gh pr review --approve --body \":+1:\" {1})+refresh-preview'
      --bind='alt-_:execute(gh pr review --request-changes {1})+refresh-preview'
    " gh fzf pr $*

  itruncated: "!GH_FZF_TRUNCATE_FIELDS=true gh i $*"
  ptruncated: "!GH_FZF_TRUNCATE_FIELDS=true gh p $*"

  ime: i --assignee @me $*
  pme: p --assignee @me $*

  pcomment: pr comment --editor
  icomment: issue comment --editor

  co: pr checkout
  ship: pr create --fill-first
  review: |
    !gh pr view --comments $1 && gh pr diff $1 && gh pr review $1;
    if [ $? -ne 0 ]; then
      read -r -p "Open PR in browser? [y/N] " REPLY
      case $REPLY in
        [yY]*) gh pr diff --web $1 ;;
      esac
    fi

  dl: '!GH_REPO="${3:-$GH_REPO}" gh api -H "accept: application/vnd.github.v3.raw" "repos/{owner}/{repo}/contents/$1" > "${2:-$1}"'

  toreview: '!gh p -S\"review:required -is:draft\"'

  todo: |
    !gh i --assignee @me --milestone \'"$(
        gh api --paginate --jq 'map(select(.due_on != null)) | .[].number' \
            '/repos/{owner}/{repo}/milestones?sort=due_on&state=open&direction=asc' |
            head -n1
    )"\'

  # https://github.com/meiji163/gh-notify
  n: '!FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS --no-hscroll" gh notify "$@"'
