# Read `man 5 sway` for a complete reference.
# vim:foldmethod=marker:filetype=swayconfig:

### Variables {{{1
#
# Mod1 is Alt, Mod4 is Super
set $mod Mod4

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "01"
set $ws2 "02"
set $ws3 "03"
set $ws4 "04"
set $ws5 "05"
set $ws6 "06"
set $ws7 "07"
set $ws8 "08"
set $ws9 "09"
set $ws10 "10"

# Set primary gruvbox colorscheme colors
set $fg1 #ebdbb2
set $fg2 #d5c4a1
set $bg0_h #1d2021
set $bg0_s #32302f
set $bg1 #3c3836
set $bg2 #504945
set $bg3 #665c54
set $bg4 #7c6f64
set $red #cc241d
set $green #98971a
set $yellow #d79921
set $blue #83a598
set $purple #b16286
set $aqua #689d68
set $orange #d65d0e
set $gray #a89984
set $white #ffffff
set $black #000000

# https://github.com/swaywm/swaylock
set $lock 'swaylock -Feflc 000000'

### Include {{{1
#
# Include system config and config shared with i3wm
include /etc/sway/config-vars.d/*
include ~/.config/i3/common


### Inputs {{{1
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
#
# Configure scrolling and clicking with the touchpad
input "type:touchpad" {
    dwt enabled
    tap disabled
    natural_scroll enabled
    middle_emulation enabled
    click_method clickfinger
    scroll_method two_finger
    accel_profile adaptive
    pointer_accel 0.25
}

# For options, see: $ localectl list-x11-keymap-options
input "type:keyboard" {
    xkb_options caps:escape
    # xkb_options shift:both_capslock
    # xkb_options shift:breaks_caps
}

### Outputs {{{1
#
# Wallpaper
output * bg "$(xdg-user-dir PICTURES)/Wallpapers/current" fill

# Monitor resolution and positioning (aligns at bottom instead of top)
# output eDP-1 resolution 1920x1080 position 0,0
# output DP-1 resolution 2560x1440 position 1920,360


### Keybindings {{{1
#
# clipboard history manager
bindsym $mod+Shift+y exec cliphist list | rofi -dmenu -p 'cliphist' | cliphist decode | wl-copy

# https://github.com/swaywm/sway/wiki/Useful-add-ons-for-sway#screenshot
bindsym Print exec grimshot copy area
bindsym $mod+Shift+Print exec grimshot save area
bindsym $mod+Print exec wl-copy < "$(grimshot save active)"
bindsym $mod+Mod1+Print exec wl-copy < "$(grimshot save output)"

# select an area of the screen and copy the text within to the clipboard
# https://github.com/tesseract-ocr/tesseract
bindsym $mod+y exec grim -s 3 -g "$(slurp)" -l 0 - | \
    convert - -bordercolor White -border 10x10 -contrast-stretch 0 \
        -opaque none +matte -sharpen 0x1 - | \
    tesseract - - --psm 6 \
        -c "load_system_dawg=0" \
        -c "load_freq_dawg=0" \
        -c "language_model_penalty_punc=0" \
        -c "language_model_penalty_case=0" \
        -c "language_model_penalty_chartype=0" \
        -c "language_model_penalty_spacing=0" \
        -c "preserve_interword_spaces=1" \
        -c "segment_nonalphabetic_script=1" | \
    wl-copy

# colorpicker
bindsym $mod+c exec grim -g "$(slurp -p)" -t ppm - | \
convert - -format "%[pixel:p{0,0}]" txt:- | \
    tail -n 1 | cut -d " " -f 4 | wl-copy

# change opacity  of current window
bindsym $mod+Control+o exec swaymsg 'opacity minus 0.05'
bindsym $mod+Control+Shift+o exec swaymsg 'opacity plus 0.05'
bindsym $mod+Control+Mod1+o exec swaymsg 'opacity 0.25'
bindsym $mod+Mod1+o exec swaymsg 'opacity 1'

# Move the window to the bottom right corner (like picture [i]n picture mode)
bindsym $mod+i floating enable; sticky enable; move scratchpad; scratchpad show; \
    resize set width 45 ppt height 45 ppt; move position 55 ppt 55 ppt; \
    exec swaymsg 'opacity 0.75'

# Float window on top of another and add some opacity
bindsym $mod+Shift+i floating enable; sticky disable; move scratchpad; scratchpad show; \
    resize set width 100 ppt height 100 ppt; move position 0 ppt 0 ppt; \
    exec swaymsg 'opacity 0.95';

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -B "Yes, exit sway" 'swaymsg exit' \
    -m "Exiting sway will end the Wayland session, are you sure?" 

# Move cursor using keys
mode "mouse" {
    bindsym Shift+h seat - cursor move -10   0
    bindsym Shift+j seat - cursor move   0  10
    bindsym Shift+k seat - cursor move   0 -10
    bindsym Shift+l seat - cursor move  10   0

    bindsym $mod+h seat - cursor move -50   0
    bindsym $mod+j seat - cursor move   0  50
    bindsym $mod+k seat - cursor move   0 -50
    bindsym $mod+l seat - cursor move  50   0

    bindsym h seat - cursor move -100   0
    bindsym j seat - cursor move   0  100
    bindsym k seat - cursor move   0 -100
    bindsym l seat - cursor move  100   0

    bindsym Control+h seat - cursor move -400   0
    bindsym Control+j seat - cursor move   0  400
    bindsym Control+k seat - cursor move   0 -400
    bindsym Control+l seat - cursor move  400   0

    bindsym Space seat - cursor press button1
    bindsym $mod+Space seat - cursor press button2
    bindsym Return seat - cursor press button1, mode "default"
    bindsym Escape mode "default"
    bindsym q mode "default"
}

bindsym $mod+Control+Space mode "mouse"


### Window assignments {{{1
#
# Automatically open apps in specific workspaces
# Find the class/app_id/etc of open windows with: $ swaymsg -t get_tree

assign [app_id="^firefox$"] $ws1
# assign [app_id="^gnome-terminal-server$"] $ws2
assign [app_id="^(file-roller|calibre-gui|gedit|gnome-calculator|gnome-calendar|org\.gnome\.Nautilus)$"] $ws5
assign [app_id="^(mpv|vlc|shotwell|lollypop|ghb|com.stremio.stremio|org\.inkscape\.Inkscape)$"] $ws6
assign [app_id="^thunderbird(-esr)?$"] $ws8
assign [app_id="^teams-for-linux$"] $ws10

# Don't go idle and lock if the current window is fullscreen (or focused for specific apps)
# TODO: make sure the 'focus' idle inhibitor takes priority over 'fullscreen'.
# The 'fullscreen' idle inhibitor may need a negative look-ahead to exclude apps, e.g.
# [app_id="^((?!(vlc|mpv|com.stremio.stremio|calibre-gui)).)*$"]
for_window [title=".*"] inhibit_idle fullscreen
for_window [app_id="^(vlc|mpv|com.stremio.stremio|calibre-gui)$"] focus, inhibit_idle focus

# NOTE: the only time I open images with mpv is via ytfzf to display thumbnails
# https://github.com/pystardust/ytfzf#thumbnail-viewers
for_window [app_id="^mpv$" title=".*\.jpg - mpv$"] floating enable, move scratchpad, scratchpad show, \
    resize set width 39 ppt height 40 ppt, move position 61 ppt 60 ppt
    

### UI {{{1
#
bar {
    # status_command i3status
    swaybar_command waybar

    position top
    tray_output primary
    font pango:Iosevka Nerd Font 12

    colors {
        # Bar background color
        background $bg0_s
        # Text color used for blocks that do not have a color specified
        statusline $fg1
        # Workspaces section
        #                   border     background    text
        focused_workspace   $blue      $blue         $black
        inactive_workspace  $bg0_h     $bg0_h        $fg1
        active_workspace    $bg0_h     $bg0_h        $fg1
        urgent_workspace    $red       $red          $black
    }
}

include /etc/sway/config.d/*


### Idle/lock/suspend {{{1
#
# https://github.com/swaywm/swayidle
#
# Dim the screen after 5 min, undim if user becomes active.
# Turn off the display 1 min after it dimmed, as a last chance to resume w/o password
# Lock the screen 1 min after the display turned off.
# Suspend the system after 22 min (total) of idle time.
# Update the status bar's weather info after unlocking or resuming from sleep
exec --no-startup-id swayidle -w \
    timeout 300 'brightnessctl --class=backlight get >/tmp/idle_brightness; \
                 brightnessctl --class=backlight set 33%-' \
         resume 'brightnessctl --class=backlight set $(cat /tmp/idle_brightness)' \
    timeout 360 'swaymsg "output * dpms off"' \
         resume 'swaymsg "output * dpms on"' \
    timeout 420 $lock \
    timeout 1337 'systemctl suspend' \
    lock $lock \
    before-sleep $lock \
    unlock 'sleep 30 && weather info >/tmp/weather' \
    after-resume 'sleep 30 && weather info >/tmp/weather'

# Turn off the display and lock the session when the laptop lid is closed
bindswitch lid:off exec swaymsg "output * dpms off"; exec $lock

# Turn on the display when the laptop lid is opened
bindswitch lid:on exec swaymsg "output * dpms on"


### Startup processes {{{1
#
# Clipboard history manager
# https://github.com/sentriz/cliphist
exec exec wl-paste --watch cliphist store
