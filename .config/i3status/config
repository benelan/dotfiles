# i3status configuration file.
# see "man i3status" for documentation.

# It is important that this file is edited as UTF-8.
# The following line should contain a sharp s:
# ÃŸ
# If the above line is not correctly displayed, fix your editor first!

general {
    colors = true
    interval = 5
    color_good = "#ebdbb2"
    color_degraded = "#d79921"
    color_bad = "#cc241d"
}

order += "tztime local_time"
order += "tztime local_date"
order += "read_file WEATHER"
order += "load"
order += "cpu_usage"
order += "memory"
order += "path_exists VPN"
order += "wireless _first_"
order += "ethernet _first_"
order += "volume master"
order += "battery all"

# Use a cronjob to update /tmp/weather with the current data via this script:
# https://github.com/benelan/dotfiles/blob/master/.dotfiles/bin/weather
#
# */20 * * * * bash -l -c 'weather info >/tmp/weather 2>/dev/null'
#
# Set these env vars in a shell login script before any interactivity checks:
#
# export PATH="<weather>:$PATH"     # alternatively download it to ~/.local/bin
# export NERD_FONTS=1               # optional, uses UTF8 pictograms by default
# export OPENWEATHER_API_KEY="<your-key>"
#
# Use wttr as a less accurate source that doesn't require auth, for example:
# curl --silent --compressed --max-time 10 --url "https://wttr.in/?format=%C+%t+(%h,+%w)" >/tmp/weather 
read_file WEATHER {
    path = "/tmp/weather"
    format = "%content"
    format_bad = ""
    separator_block_width = 25
}

tztime local_time {
    format = "%X"
    separator_block_width = 25
}

tztime local_date {
    format = "%a %x"
    separator_block_width = 25
}

volume master {
    format = "VOL: %volume"
    format_muted = "VOL: muted (%volume)"
    device = "default"
    mixer = "Master"
    mixer_idx = 0
    separator_block_width = 25
}

battery all {
    format = "%status: %percentage (%remaining hr)"
    integer_battery_capacity = true
    low_threshold = "20"
    threshold_type = "percentage"
    separator_block_width = 25
}

wireless _first_ {
    format_up = "WIFI:%quality (%essid)"
    format_down = "WIFI: down"
    separator_block_width = 25
}

ethernet _first_ {
    format_up = "ETH: %speed"
    format_down = ""
    separator_block_width = 25
}

path_exists VPN {
    # path exists when a VPN tunnel launched by nmcli/nm-applet is active
    path = "/proc/sys/net/ipv4/conf/tun0"
    format = "%title"
    format_down = ""
    separator_block_width = 25
}

# read_file uptime {
#         path = "/proc/uptime"
#         separator_block_width = 25
# }

# disk "/" {
#         format = "%free"
#         separator_block_width = 25
# }

memory {
    format = ""
    format_degraded = "MEM: %percentage_used (%used / %total)"
    threshold_degraded = "75%"
    threshold_critical = "25%"
    separator_block_width = 25
}

cpu_usage {
    format = ""
    format_above_threshold = "CPU: %usage"
    format_above_degraded_threshold = "CPU: %usage"
    separator_block_width = 25
    degraded_threshold = 25
    max_threshold = 75
}

load {
    format = ""
    format_above_threshold = "LOAD: %1min | %5min | %15min"
    max_threshold = 3
    separator_block_width = 25
}
