# vim:foldmethod=marker:filetype=i3config:
#
# This file is included by both the i3 and sway configs

### Keybindings {{{1
#
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# # Screen brightness controls
# NOTE: add user to input and video groups for write permissions to system files:
# $ sudo usermod -a -G input,video $USER
bindsym XF86MonBrightnessUp exec --no-startup-id \
    brightnessctl --class=backlight set +10%
bindsym XF86MonBrightnessDown exec --no-startup-id \
    brightnessctl --class=backlight set 10%-
bindsym Shift+XF86MonBrightnessUp exec --no-startup-id \
    brightnessctl --class=backlight set +5%
bindsym Shift+XF86MonBrightnessDown exec --no-startup-id \
    brightnessctl --class=backlight set 5%-
bindsym $mod+XF86MonBrightnessUp exec --no-startup-id \
    brightnessctl --class=backlight set 100%
bindsym $mod+XF86MonBrightnessDown exec --no-startup-id \
    brightnessctl --class=backlight set 0%

# # Use pactl to adjust volume in PulseAudio.
# bindsym XF86AudioRaiseVolume exec --no-startup-id \
#     pactl set-sink-volume @DEFAULT_SINK@ +10% && killall -SIGUSR1 i3status
# bindsym XF86AudioLowerVolume exec --no-startup-id \
#     pactl set-sink-volume @DEFAULT_SINK@ -10% && killall -SIGUSR1 i3status
# bindsym Shift+XF86AudioRaiseVolume exec --no-startup-id \
#     pactl set-sink-volume @DEFAULT_SINK@ +5% && killall -SIGUSR1 i3status
# bindsym Shift+XF86AudioLowerVolume exec --no-startup-id \
#     pactl set-sink-volume @DEFAULT_SINK@ -5% && killall -SIGUSR1 i3status
# bindsym XF86AudioMute exec --no-startup-id \
#     pactl set-sink-mute @DEFAULT_SINK@ toggle &&  killall -SIGUSR1 i3status

bindsym XF86AudioMicMute exec --no-startup-id \
    pactl set-source-mute @DEFAULT_SOURCE@ toggle &&  killall -SIGUSR1 i3status

# https://github.com/hastinbe/i3-volume
bindsym XF86AudioMute exec --no-startup-id \
    NO_NOTIFY_COLOR=1 volume -ynPt i3status -u SIGUSR1 mute
bindsym XF86AudioRaiseVolume exec --no-startup-id \
    NO_NOTIFY_COLOR=1 volume -ynPt i3status -u SIGUSR1 up 5
bindsym $mod+XF86AudioRaiseVolume exec --no-startup-id \
    NO_NOTIFY_COLOR=1 volume -ynPt i3status -u SIGUSR1 set 100
bindsym XF86AudioLowerVolume exec --no-startup-id \
    NO_NOTIFY_COLOR=1 volume -ynPt i3status -u SIGUSR1 down 5
bindsym $mod+XF86AudioLowerVolume exec --no-startup-id \
    NO_NOTIFY_COLOR=1 volume -ynPt i3status -u SIGUSR1 set 0

# Dunst notification keybindings
bindsym $mod+n exec dunstctl close
bindsym $mod+Shift+n exec dunstctl close-all
bindsym $mod+Control+n exec dunstctl action
bindsym $mod+Control+Shift+n exec dunstctl context
bindsym $mod+Mod1+n exec dunstctl history-pop
bindsym $mod+Mod1+Shift+n exec dunstctl set-paused toggle

# Start a terminal
bindsym $mod+Return exec "$TERMINAL"
bindsym $mod+t workspace number $ws2; exec "$TERMINAL"

# Start apps
bindsym $mod+b exec "$BROWSER"
bindsym $mod+Shift+b exec "$HOME_BROWSER"

# Use rofi as the launcher. Requires XWayland or the wl-roots compatible fork:
# https://github.com/lbonn/rofi
bindsym $mod+a exec rofi -show drun -theme ~/.config/rofi/fullscreen.rasi
bindsym $mod+d exec rofi -show drun -theme ~/.config/rofi/classic.rasi
bindsym $mod+space exec rofi -show drun -theme ~/.config/rofi/fancy.rasi
bindsym $mod+Shift+grave exec BROWSER=firefox ~/.config/rofi/applets/bin/quicklinks.sh
bindsym $mod+End exec ~/.config/rofi/applets/bin/powermenu.sh
bindsym $mod+grave exec music rofi

# Change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Move focused workspace to output (monitor)
bindsym $mod+Control+h move workspace to output left
bindsym $mod+Control+j move workspace to output down
bindsym $mod+Control+k move workspace to output up
bindsym $mod+Control+l move workspace to output right

# Change focus between tiling / floating windows
bindsym $mod+o focus mode_toggle

# Pin a window to all workspaces
bindsym $mod+p sticky toggle

# Toggle tiling / floating modes
bindsym $mod+f floating toggle

# Enter fullscreen mode for the focused container
bindsym $mod+m fullscreen toggle

# Change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
bindsym $mod+v layout toggle all

# Change split to horizontal or vertical orientation (vim style)
bindsym $mod+Shift+v split h
bindsym $mod+Shift+s split v

# Switches to the previously focused workspace
bindsym $mod+Tab workspace back_and_forth

# Kill focused window
bindsym $mod+Shift+q kill

# Reload the configuration file
bindsym $mod+Shift+c reload

# Lock and suspend
bindsym $mod+Escape exec loginctl lock-session
bindsym $mod+Shift+Escape exec systemctl suspend

# Resize window (you can also use the mouse for that)
mode "resize" {
    bindsym Shift+h resize shrink width 1 px or 1 ppt
    bindsym Shift+j resize grow height 1 px or 1 ppt
    bindsym Shift+k resize shrink height 1 px or 1 ppt
    bindsym Shift+l resize grow width 1 px or 1 ppt

    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    bindsym Control+h resize shrink width 50 px or 50 ppt
    bindsym Control+j resize grow height 50 px or 50 ppt
    bindsym Control+k resize shrink height 50 px or 50 ppt
    bindsym Control+l resize grow width 50 px or 50 ppt

    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym q mode "default"
}

bindsym $mod+r mode "resize"

# Move workspace to current output and switch to it
bindsym $mod+1 [workspace=$ws1] move workspace to output current; workspace number $ws1
bindsym $mod+2 [workspace=$ws2] move workspace to output current; workspace number $ws2
bindsym $mod+3 [workspace=$ws3] move workspace to output current; workspace number $ws3
bindsym $mod+4 [workspace=$ws4] move workspace to output current; workspace number $ws4
bindsym $mod+5 [workspace=$ws5] move workspace to output current; workspace number $ws5
bindsym $mod+6 [workspace=$ws6] move workspace to output current; workspace number $ws6
bindsym $mod+7 [workspace=$ws7] move workspace to output current; workspace number $ws7
bindsym $mod+8 [workspace=$ws8] move workspace to output current; workspace number $ws8
bindsym $mod+9 [workspace=$ws9] move workspace to output current; workspace number $ws9
bindsym $mod+0 [workspace=$ws10] move workspace to output current; workspace number $ws10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Kill all windows in a workspace
bindsym $mod+Mod1+1 [workspace=$ws1] kill
bindsym $mod+Mod1+2 [workspace=$ws2] kill
bindsym $mod+Mod1+3 [workspace=$ws3] kill
bindsym $mod+Mod1+4 [workspace=$ws4] kill
bindsym $mod+Mod1+5 [workspace=$ws5] kill
bindsym $mod+Mod1+6 [workspace=$ws6] kill
bindsym $mod+Mod1+7 [workspace=$ws7] kill
bindsym $mod+Mod1+8 [workspace=$ws8] kill
bindsym $mod+Mod1+9 [workspace=$ws9] kill
bindsym $mod+Mod1+0 [workspace=$ws10] kill

workspace $ws1 output primary
workspace $ws2 output primary
workspace $ws3 output primary
workspace $ws4 output primary
workspace $ws5 output primary

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

### Window assignments {{{1
#
# Automatically open apps in specific workspaces
# Find the class/app_id/etc of open windows with: $ swaymsg -t get_tree

assign [class="^(Brave-browser|Chromium|Google-chrome)$" title="^Microsoft Teams"] $ws10
assign [class="^(Brave-browser|Chromium|Google-chrome)$" title="^Outlook \(PWA\)"] $ws9
assign [class="^(Brave-browser|Chromium|Google-chrome)$" title="^GitHub"] $ws4
assign [class="^(Brave-browser|Chromium|Google-chrome)$"] $ws3
assign [class="^(Code|obsidian|Wireshark)$"] $ws4
assign [class="^(Gimp-\d+\.\d+|com\.sayonara-player\.Sayonara)$"] $ws6
assign [class="^(discord|Signal)$"] $ws7
assign [class="^teams-for-linux$"] $ws10

# libre office window's don't have a class on startup so they need to be moved afterwards
for_window [class="^libreoffice-(startcenter|writer|calc|impress|draw|math)$"] move window to workspace $ws5


### UI {{{1
#
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Ubuntu 13

# class                 border  background  text    indicator  child_border
client.focused          $bg4    $bg2        $fg1    $fg2       $bg4
client.focused_inactive $bg1    $bg1        $fg2    $fg2       $bg1
client.unfocused        $bg1    $bg1        $fg2    $fg2       $bg1
client.urgent           $red    $red        $white  $red       $red

default_border pixel 2
default_floating_border pixel 2

force_display_urgency_hint 500 ms

focus_follows_mouse no


### Startup processes {{{1
#
# Notification manager
# https://github.com/dunst-project/dunst
exec_always --no-startup-id ! pgrep -x dunst && dunst

# Network manager applet
exec_always --no-startup-id ! pgrep -x nm-applet && nm-applet --indicator

# Bluetooth manager applet
exec_always --no-startup-id ! pgrep -x blueman-applet && blueman-applet

# Low battery notification
# https://github.com/rjekker/i3-battery-popup
exec --no-startup-id i3-battery-popup -nL 15 \
        -s /usr/share/sounds/freedesktop/stereo/dialog-warning.oga

# Refresh the statusbar weather info
exec_always --no-startup-id weather info > /tmp/weather
